// <auto-generated />
using System;
using Cw.Vanti.Integrations.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cw.Vanti.Integrations.Datos.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.ActividadEconomica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ActividadesEconomicas", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.AdjuntoSolicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<string>("Archivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdInformacionSolicitud")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ruta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdInformacionSolicitud");

                    b.ToTable("AdjuntosSolicitudes", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.BeneficiarioPoliza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdTipoAsegurado")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoAseguradoConPrenda")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoBeneficiario")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoBeneficiarioConPrenda")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPoliza")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoTomador")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoTomadorConPrenda")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoAsegurado");

                    b.HasIndex("IdTipoAseguradoConPrenda");

                    b.HasIndex("IdTipoBeneficiario");

                    b.HasIndex("IdTipoBeneficiarioConPrenda");

                    b.HasIndex("IdTipoPoliza");

                    b.HasIndex("IdTipoTomador");

                    b.HasIndex("IdTipoTomadorConPrenda");

                    b.ToTable("BeneficiariosPolizas", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Cabezote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFinal")
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicial")
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTercero")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTercero");

                    b.ToTable("Cabezotes", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Campo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoOperacion")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoOperacion");

                    b.ToTable("Campos", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.CentroOperacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAgencia")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdAgencia");

                    b.HasIndex("IdEmpresa");

                    b.ToTable("CentrosOperaciones", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Cita", b =>
                {
                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<string>("CargoEntrevistador")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("CreadoPor")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("EntrevistadoPor")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EstadoRegistro")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaCita")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaEntrevista")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime");

                    b.Property<string>("HoraCita")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("IdAfiliado")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<string>("LugarEntrevista")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservacionesEntrevista")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("ResultadoEntrevista")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("TelefonoEntrevistador")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.ToTable("Citas", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.DetallePrestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EstadoRegistro")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPrestamo")
                        .HasColumnType("int");

                    b.Property<int?>("IdPrestamoNavigationId")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Periodo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("ValorCuota")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.HasIndex("IdPrestamoNavigationId");

                    b.ToTable("DetallesPrestamos", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.DetalleProcesoNomina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("DocumentoSap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpresaVinculacionBus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdEmpresaVinculacionBus")
                        .HasColumnType("int");

                    b.Property<int?>("IdNominaPeriodoProceso")
                        .HasColumnType("int");

                    b.Property<int>("IdProcesoNomina")
                        .HasColumnType("int");

                    b.Property<int?>("IdVehiculo")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Periodo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ValorLiquidacion")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdNominaPeriodoProceso");

                    b.ToTable("DetallesProcesosNominas", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.DocumentoConcepto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DocumentosConceptos", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.DocumentoConceptoProceso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDocumentoConcepto")
                        .HasColumnType("int");

                    b.Property<int>("IdProceso")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdDocumentoConcepto");

                    b.HasIndex("IdProceso");

                    b.ToTable("DocumentosConceptosProcesos", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Embargo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEntidadFinanciera")
                        .HasColumnType("int");

                    b.Property<int>("IdTercero")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoCuenta")
                        .HasColumnType("int");

                    b.Property<string>("JuzgadoEmbargo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("NumeroCuentaEmbargo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PorcentajeEmbargo")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal>("SaldoEmbargo")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal>("ValorEmbargo")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.HasIndex("IdEntidadFinanciera");

                    b.HasIndex("IdTercero");

                    b.HasIndex("IdTipoCuenta");

                    b.ToTable("Embargos", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Nomenclatura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estados", "Gral");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.EstadoAdministrativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<bool>("AplicaNovedadManual")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EstadosAdministrativos", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Fondo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaUltimoRetiro")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdEmpresaFondoReposicionBus")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoFondo")
                        .HasColumnType("int");

                    b.Property<int>("IdVehiculo")
                        .HasColumnType("int");

                    b.Property<decimal?>("Intereses")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("NombreEmpresaFondoReposicionBus")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PeriodoAuxilio")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal?>("ValorAcumulado")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("ValorAuxilio")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("ValorUltimoRetiro")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoFondo");

                    b.ToTable("Fondos", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.GestionAnticipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUsuarioAprobacion")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<int>("NivelDependencia")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuarioAprobacion");

                    b.ToTable("GestionesAnticipos", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.GestionSolicitudUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<bool>("AplicaDetalleVehiculo")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoProceso")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoProceso");

                    b.ToTable("GestionesSolicitudesUsuarios", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialBeneficiarioPoliza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdBeneficiarioPoliza")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoAsegurado")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoAseguradoConPrenda")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoBeneficiario")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoBeneficiarioConPrenda")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoPoliza")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoTomador")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoTomadorConPrenda")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdBeneficiarioPoliza");

                    b.ToTable("HistorialBeneficiariosPolizas", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialCabezote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFinal")
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicial")
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCabezote")
                        .HasColumnType("int");

                    b.Property<int>("IdTercero")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCabezote");

                    b.ToTable("HistorialCabezotes", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialCampo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCampo")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoOperacion")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCampo");

                    b.ToTable("HistorialCampos", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialCentroOperacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAgencia")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int>("IdCentroOperacion")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpresa")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCentroOperacion");

                    b.ToTable("HistorialCentrosOperaciones", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialDocumentoConcepto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDocumentoConcepto")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdDocumentoConcepto");

                    b.ToTable("HistorialDocumentosConceptos", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialDocumentoConceptoProceso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDocumentoConcepto")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int>("IdDocumentoConceptoProceso")
                        .HasColumnType("int");

                    b.Property<int>("IdProceso")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdDocumentoConceptoProceso");

                    b.ToTable("HistorialDocumentosConceptosProcesos", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialEstadoAdministrativo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<bool>("AplicaNovedadManual")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEstadoAdministrativo")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdEstadoAdministrativo");

                    b.ToTable("HistorialEstadosAdministrativos", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialGestionAnticipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEstadoAdministrativo")
                        .HasColumnType("int");

                    b.Property<int>("IdGestionAnticipo")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioAprobacion")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<int>("NivelDependencia")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdGestionAnticipo");

                    b.ToTable("HistorialGestionesAnticipos", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialGestionSolicitudUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<bool>("AplicaDetalleVehiculo")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdGestionSolicitudUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoProceso")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdGestionSolicitudUsuario");

                    b.ToTable("HistorialGestionesSolicitudesUsuarios", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialMarcaChasis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMarcaChasis")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdMarcaChasis");

                    b.ToTable("HistorialMarcasChasis", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialModalidadServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<double>("CapacidadTransportadoraMaxima")
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<double>("CapacidadTransportadoraMinima")
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdModalidadServicio")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdModalidadServicio");

                    b.ToTable("HistorialModalidadesServicios", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialMotivoCambioEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEstadoAdministrativo")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int>("IdMotivoCambioEstado")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdMotivoCambioEstado");

                    b.ToTable("HistorialMotivosCambiosEstados", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialMotivoCambioTarjetaPropiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<bool>("AplicaMotor")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaTraspaso")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaVinculacion")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMotivoCambioTarjetaPropiedad")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdMotivoCambioTarjetaPropiedad");

                    b.ToTable("HistorialMotivosCambiosEstadosTarjetasPropiedad", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialMotivoDesvinculacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<bool>("AplicaEmpresaDestino")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMotivoDesvinculacion")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoDesvinculacion")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdMotivoDesvinculacion");

                    b.ToTable("HistorialMotivosDesvinculaciones", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialMotivoRenovacionPoliza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<bool?>("AplicaAhorro")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool?>("AplicaCargoEmnpresa")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool?>("AplicaCargueDatosAnteriorPoliza")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool?>("AplicaCargueMasivo")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool?>("AplicaDevolucionPropietario")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool?>("AplicaPrestamo")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdClaseRenovacion")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int>("IdMotivoRenovacionPoliza")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdMotivoRenovacionPoliza");

                    b.ToTable("HistorialMotivosRenovacionesPolizas", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialMotivoRenovacionPolizaTipoPoliza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMotivoRenovacionPoliza")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int>("IdMotivoRenovacionTipoPoliza")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPoliza")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdMotivoRenovacionTipoPoliza");

                    b.ToTable("HistorialMotivosRenovacionesPolizasTiposPolizas", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialNivelServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ConsecutivoNumeroInterno")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCentroOperativo")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int>("IdEmpresaOperativa")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int>("IdNivelServicio")
                        .HasColumnType("int");

                    b.Property<bool>("Internacional")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerieNumeroInterno")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("ServicioEspecial")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool>("ServicioPasajero")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdNivelServicio");

                    b.ToTable("HistorialNivelesServicios", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialParametrizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdParametrizacion")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefijo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdParametrizacion");

                    b.ToTable("HistorialParametrizacion");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialParametrizacionDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdParametrizacion")
                        .HasColumnType("int");

                    b.Property<int>("IdParametrizacionDetalle")
                        .HasColumnType("int");

                    b.Property<int>("IdParametrizacionDetallePadre")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefijo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdParametrizacionDetalle");

                    b.ToTable("HistorialParametrizacionesDetalles", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialParametro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdParametro")
                        .HasColumnType("int");

                    b.Property<int>("IdTercero")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdParametro");

                    b.ToTable("HistorialParametros", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialParametroGeneralProceso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMotivoCambioEstado")
                        .HasColumnType("int");

                    b.Property<int>("IdParametroGeneralProceso")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoProceso")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParametroGeneralProceso")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdParametroGeneralProceso");

                    b.ToTable("HistorialParametrosGeneralesProcesos", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialPeriodo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Anio")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<int>("Dia")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPeriodo")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Mes")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PeriodoAsignado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdPeriodo");

                    b.ToTable("HistorialPeriodos", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialPorcentajeCorrespondiente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<bool>("EsCasoEspecial")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFinal")
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicial")
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdModalidadServicio")
                        .HasColumnType("int");

                    b.Property<int>("IdPorcentajeCorrespondiente")
                        .HasColumnType("int");

                    b.Property<int>("IdTercero")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPropietario")
                        .HasColumnType("int");

                    b.Property<int>("IdVehiculo")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Porcentaje")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdPorcentajeCorrespondiente");

                    b.ToTable("HistorialPorcentajesCorrespondientes", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoLiquidacion")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdProducto");

                    b.ToTable("HistorialProductos", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialReferenciaChasis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Consumo")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("GalonTanque")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdMarcaChasis")
                        .HasColumnType("int");

                    b.Property<int>("IdReferenciaChasis")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdReferenciaChasis");

                    b.ToTable("HistorialReferenciasChasis", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTercero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdTercero")
                        .HasColumnType("int");

                    b.Property<int?>("IdTerceroPadre")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoIdentificacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoPersona")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoTercero")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTercero");

                    b.ToTable("HistorialTerceros", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTerceroDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaExpedicionDocumento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<int?>("IdActividadEconomica")
                        .HasColumnType("int");

                    b.Property<int?>("IdCiudadExpedicionDocumento")
                        .HasColumnType("int");

                    b.Property<int?>("IdCiudadNacimiento")
                        .HasColumnType("int");

                    b.Property<int?>("IdTercero")
                        .HasColumnType("int");

                    b.Property<int>("IdTerceroDetalle")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoDetalleEstadoCivil")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoDetalleNivelEducativo")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoDetalleOcupacion")
                        .HasColumnType("int");

                    b.Property<string>("Internacional")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LibretaMilitar")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("NombreCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumeroHijos")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroPersonasCargo")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PoderPublico")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PrimerApellido")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PrimerNombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ReconocimientoPublico")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RecursoPublico")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SegundoApellido")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SegundoNombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTerceroDetalle");

                    b.ToTable("HistorialTercerosDetalles", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTerceroSolicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCita")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFormulario")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEstadoSolicitud")
                        .HasColumnType("int");

                    b.Property<int>("IdTercero")
                        .HasColumnType("int");

                    b.Property<int>("IdTerceroSolicitud")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("NumeroSolicitud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTerceroSolicitud");

                    b.ToTable("HistorialTercerosSolicitudes", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTerceroTipoDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTercero")
                        .HasColumnType("int");

                    b.Property<int>("IdTerceroTipoDetalle")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoDetalle")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTerceroTipoDetalle");

                    b.ToTable("HistorialTercerosTiposDetalles", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTipoDesvinculacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<bool>("AplicaAprobacionOtrasAreas")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaPortalAfiliado")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaRetractacion")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoDesvinculacion")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoDesvinculacion");

                    b.ToTable("HistorialTiposDesvinculaciones", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTipoFondoAyudaMutua", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoFondoAyudaMutua")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoLiquidacion")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorComercial")
                        .IsUnicode(false)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorFijo")
                        .IsUnicode(false)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoFondoAyudaMutua");

                    b.ToTable("HistorialTiposFAM", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTipoLiquidacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTercero")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoLiquidacion")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoLiquidacionRelacion")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoLiquidacionRelacion");

                    b.ToTable("HistorialTiposLiquidaciones", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTipoPoliza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Ahorro")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<bool?>("Cabezote")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool?>("CoberturaAdicional")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoPoliza")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoQuienAsume")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("NovedadAfectacion")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoPoliza");

                    b.ToTable("HistorialTiposPolizas", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTipoPolizaTipoPrestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoPoliza")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPolizaTipoPrestamo")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPrestamo")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoPolizaTipoPrestamo");

                    b.ToTable("HistorialTiposPolizasTiposPrestamos", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTipoPrestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AbonoExtraordinario")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdEstadoBus")
                        .HasColumnType("int");

                    b.Property<int?>("IdFormaDescuento")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoInteres")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPrestamo")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("NumeroMaximaCuota")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequiereSolicitud")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<decimal?>("TasaInteres")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TiposEstadoId")
                        .HasColumnType("int");

                    b.Property<bool?>("TraspasoPrestamo")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoPrestamo");

                    b.HasIndex("TiposEstadoId");

                    b.ToTable("HistorialTiposPrestamos", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTipoTraspaso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ActualizaEstadoAdministrativo")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<bool>("AplicaAprobacionOtrasAreas")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaDatosFinancieros")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaPortalAfiliado")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaRetractacion")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoTraspaso")
                        .HasColumnType("int");

                    b.Property<int>("IdUnidadTiempo")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TiempoTraspaso")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoTraspaso");

                    b.ToTable("HistorialTiposTraspasos", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTipoVinculacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<bool>("AplicaConcesionario")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaEmpresaOrigen")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaPlaca")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaVinculacionInterna")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoVinculacion")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoVinculacion");

                    b.ToTable("HistorialTiposVinculaciones", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialUsuarioDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDocumentoConcepto")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdusuarioDocumento")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ruta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdusuarioDocumento");

                    b.ToTable("HistorialUsuariosDocumentos", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialUsuarioTipoDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoDetalle")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuarioTipoDetalle")
                        .HasColumnType("int");

                    b.Property<string>("IpMaquina")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoMaximo")
                        .IsUnicode(false)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdUsuarioTipoDetalle");

                    b.ToTable("HistorialUsuariosTiposDetalles", "Hist");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.InformacionSolicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdTercero")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoDetallePago")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoDocumentoAfiliado")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoDocumentoDetallePago")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoPersonaDetallePago")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("NombreCompletoDetallePago")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NumeroBusAfiliado")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NumeroDocumentoAfiliado")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NumeroDocumentoDetallePago")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NumeroSolicitud")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTercero");

                    b.HasIndex("IdTipoDetallePago");

                    b.HasIndex("IdTipoDocumentoAfiliado");

                    b.HasIndex("IdTipoDocumentoDetallePago");

                    b.HasIndex("IdTipoPersonaDetallePago");

                    b.ToTable("InformacionSolicitudes", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.LogError", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<int?>("ErrorLine")
                        .HasColumnType("int");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ErrorNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ErrorSeverity")
                        .HasColumnType("int");

                    b.Property<int?>("ErrorState")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("NombreProceso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LogError", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.LogReportQuery", b =>
                {
                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<string>("Campo1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Identificador")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("USUARIO");

                    b.ToTable("LogReportQuery", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.MarcaCarroceria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MarcasCarrocerias", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.MarcaChasis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MarcasChasis", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.ModalidadServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<double>("CapacidadTransportadoraMaxima")
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<double>("CapacidadTransportadoraMinima")
                        .IsUnicode(false)
                        .HasColumnType("float");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ModalidadesServicios", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.ModeloCarroceria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMarcaCarroceria")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdMarcaCarroceria");

                    b.ToTable("ModelosCarrocerias", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.MotivoCambioEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEstadoAdministrativo")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdEstadoAdministrativo");

                    b.ToTable("MotivosCambiosEstados", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.MotivoCambioTarjetaPropiedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<bool>("AplicaMotor")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaTraspaso")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaVinculacion")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MotivosCambiosEstadosTarjetasPropiedad", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.MotivoDesvinculacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<bool>("AplicaEmpresaDestino")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoDesvinculacion")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoDesvinculacion");

                    b.ToTable("MotivosDesvinculaciones", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.MotivoRenovacionPoliza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<bool?>("AplicaAhorro")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool?>("AplicaCargoEmnpresa")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool?>("AplicaCargueDatosAnteriorPoliza")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool?>("AplicaCargueMasivo")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool?>("AplicaDevolucionPropietario")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool?>("AplicaPrestamo")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdClaseRenovacion")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdClaseRenovacion");

                    b.ToTable("MotivosRenovacionesPolizas", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.MotivoRenovacionPolizaTipoPoliza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMotivoRenovacionPoliza")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPoliza")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdMotivoRenovacionPoliza");

                    b.HasIndex("IdTipoPoliza");

                    b.ToTable("MotivosRenovacionesPolizasTiposPolizas", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.NivelServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ConsecutivoNumeroInterno")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCentroOperativo")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int>("IdEmpresaOperativa")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<bool>("Internacional")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerieNumeroInterno")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("ServicioEspecial")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool>("ServicioPasajero")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdCentroOperativo");

                    b.HasIndex("IdEmpresaOperativa");

                    b.ToTable("NivelesServicios", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Nomina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<decimal?>("CreditoQuincena")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("DebitoQuincena")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("EmpresaVinculacionBus")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EstadoRegistro")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdVehiculo")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("NombreBeneficiarioTitular")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("NumeroBus")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumeroDocumentoBeneficiarioTitular")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PeriodoLiquidacion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("SaldoQuincena")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("SaldoQuincenaAnterior")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("TipoDocumentoBeneficiarioTitular")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Nominas", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.NominaPeriodoProceso", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoContable")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EstadoRegistro")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaLiquidacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdNomina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("IdPeriodo")
                        .HasColumnType("int");

                    b.Property<int?>("IdPeriodoNavigationId")
                        .HasColumnType("int");

                    b.Property<int>("IdProcesoNomina")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdPeriodoNavigationId");

                    b.HasIndex("IdProcesoNomina");

                    b.HasIndex(new[] { "IdNomina", "IdPeriodo", "IdProcesoNomina" }, "UN_NominasPeriodosProcesos")
                        .IsUnique();

                    b.ToTable("NominasPeriodosProcesos", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Notificacion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int?>("AnuladorPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Estado")
                        .HasColumnType("bigint");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoNotificacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("Id");

                    b.ToTable("Notificaciones", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Novedad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdNovedadCausal")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservacionNovedad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdNovedadCausal");

                    b.ToTable("Novedades", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.NovedadCausal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NovedadesCausales", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Parametrizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefijo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Parametrizaciones", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.ParametrizacionDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdParametrizacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdParametrizacionDetallePadre")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prefijo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdParametrizacion");

                    b.HasIndex("IdParametrizacionDetallePadre");

                    b.ToTable("ParametrizacionesDetalles", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Parametro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTercero")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdTercero");

                    b.ToTable("Parametros", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.ParametroGeneralProceso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMotivoCambioEstado")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoProceso")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdMotivoCambioEstado");

                    b.HasIndex("IdTipoProceso");

                    b.ToTable("ParametrosGeneralesProcesos", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Periodo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Anio")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<int>("Dia")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Mes")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PeriodoAsignado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Periodos", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Poliza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Cabezote")
                        .HasColumnType("datetime2");

                    b.Property<string>("Certificado")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdCoberturaAdicional")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("IdPrestamo")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPoliza")
                        .HasColumnType("int");

                    b.Property<int?>("IdVehiculo")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("NumeroPolizaAseguradora")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoPoliza");

                    b.HasIndex("IdVehiculo");

                    b.ToTable("Polizas", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.PolizaDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<string>("CodigoFasecolda")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaExpedicion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaInicioVigencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdAseguradora")
                        .HasColumnType("int");

                    b.Property<int>("IdIntermediario")
                        .HasColumnType("int");

                    b.Property<int>("IdPoliza")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ValorAsegurado")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("ValorPagar")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("ValorPoliza")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdIntermediario");

                    b.HasIndex("IdPoliza");

                    b.ToTable("PolizasDetalles", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.PorcentajeCorrespondiente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<bool>("EsCasoEspecial")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFinal")
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicial")
                        .IsUnicode(false)
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdModalidadServicio")
                        .HasColumnType("int");

                    b.Property<int>("IdTercero")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPropietario")
                        .HasColumnType("int");

                    b.Property<int>("IdVehiculo")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Porcentaje")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdModalidadServicio");

                    b.HasIndex("IdTercero");

                    b.HasIndex("IdTipoPropietario");

                    b.HasIndex("IdVehiculo");

                    b.ToTable("PorcentajesCorrespondientes", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Prestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdFormaDescuento")
                        .HasColumnType("int");

                    b.Property<int?>("IdPeriodoInicial")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPrestamo")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroCuota")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ValorCuota")
                        .HasColumnType("decimal(8,2)");

                    b.Property<decimal?>("ValorPrestamo")
                        .HasColumnType("decimal(8,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdPeriodoInicial");

                    b.HasIndex("IdTipoPrestamo");

                    b.ToTable("Prestamos", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.ProcesoNomina", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("NombreProceso")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProcesosNomina", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoLiquidacion")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoLiquidacion");

                    b.ToTable("Productos", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.ReferenciaChasis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Consumo")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("GalonTanque")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IdMarcaChasis")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdMarcaChasis");

                    b.ToTable("ReferenciasChasis", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Tercero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int?>("IdTerceroPadre")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoIdentificacion")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoPersona")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoTercero")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTerceroPadre");

                    b.HasIndex("IdTipoIdentificacion");

                    b.HasIndex("IdTipoPersona");

                    b.HasIndex("IdTipoTercero");

                    b.ToTable("Terceros", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroActivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Activos")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<decimal?>("Comisiones")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Especifique")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Honorarios")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int?>("IdTercero")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OtrosIngresos")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("SalarioPension")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("TotalActivos")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("TotalIngresos")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.HasIndex("IdTercero");

                    b.ToTable("TercerosActivos", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaExpedicionDocumento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<int?>("IdActividadEconomica")
                        .HasColumnType("int");

                    b.Property<int?>("IdCiudadExpedicionDocumento")
                        .HasColumnType("int");

                    b.Property<int?>("IdCiudadNacimiento")
                        .HasColumnType("int");

                    b.Property<int?>("IdTercero")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoDetalleEstadoCivil")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoDetalleNivelEducativo")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoDetalleOcupacion")
                        .HasColumnType("int");

                    b.Property<string>("Internacional")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("LibretaMilitar")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("NombreCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NumeroHijos")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroPersonasCargo")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PoderPublico")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PrimerApellido")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("PrimerNombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ReconocimientoPublico")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RecursoPublico")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SegundoApellido")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SegundoNombre")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("TipoDetalleId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoDetalleId1")
                        .HasColumnType("int");

                    b.Property<int?>("TipoDetalleId2")
                        .HasColumnType("int");

                    b.Property<int?>("TipoDetalleId3")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdActividadEconomica");

                    b.HasIndex("IdTercero");

                    b.HasIndex("IdTipoDetalleEstadoCivil");

                    b.HasIndex("IdTipoDetalleNivelEducativo");

                    b.HasIndex("IdTipoDetalleOcupacion");

                    b.HasIndex("TipoDetalleId");

                    b.HasIndex("TipoDetalleId1");

                    b.HasIndex("TipoDetalleId2");

                    b.HasIndex("TipoDetalleId3");

                    b.ToTable("TercerosDetalles", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroInformacionFamiliar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaExpedicionDocumento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<int>("IdCiudadExpedicionDocumento")
                        .HasColumnType("int");

                    b.Property<int>("IdTercero")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoDetalleParentesco")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoDetalleProfesion")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoIdentificacion")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTercero");

                    b.HasIndex("IdTipoDetalleParentesco");

                    b.HasIndex("IdTipoDetalleProfesion");

                    b.HasIndex("IdTipoIdentificacion");

                    b.ToTable("TercerosInformacionesFamiliares", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroLocalizacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<string>("ApellidoContacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdBarrio")
                        .HasColumnType("int");

                    b.Property<int?>("IdTercero")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoLocalizacion")
                        .HasColumnType("int");

                    b.Property<int>("IndicativoCelular")
                        .HasColumnType("int");

                    b.Property<int>("IndicativoTelefono")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("NombreContacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("IdTercero");

                    b.HasIndex("IdTipoLocalizacion");

                    b.ToTable("TercerosLocalizaciones", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroPasivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<decimal?>("Arriendo")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<decimal?>("CuotaTarjetaCredito")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("DescuentoNomina")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdTercero")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("OtrosGastos")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("OtrosPasivos")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("ServiciosPublicos")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("TotalIngresos")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.HasIndex("IdTercero");

                    b.ToTable("TercerosPasivos", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroPasivoDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdEntidadFinanciera")
                        .HasColumnType("int");

                    b.Property<int>("IdTerceroPasivo")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Saldo")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("ValorCuota")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("ValorInicial")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.HasIndex("IdEntidadFinanciera");

                    b.HasIndex("IdTerceroPasivo");

                    b.ToTable("TercerosPasivosDetalles", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroPatrimonio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdTercero")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoDetallePatrimonio")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoDetalleVivienda")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Modelo")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("NombreArrendador")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("TiempoVivir")
                        .HasColumnType("int");

                    b.Property<string>("TipoCarroceria")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("IdTercero");

                    b.HasIndex("IdTipoDetallePatrimonio");

                    b.HasIndex("IdTipoDetalleVivienda");

                    b.ToTable("TercerosPatrimonios", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroPatrimonioDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCiudad")
                        .HasColumnType("int");

                    b.Property<int?>("IdTerceroPatrimonio")
                        .HasColumnType("int");

                    b.Property<string>("MatriculaFolio")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTerceroPatrimonio");

                    b.ToTable("TercerosPatrimoniosDetalles", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroReferencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Antiguedad")
                        .HasColumnType("int");

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Direccion")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength(true);

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdEntidadFinanciera")
                        .HasColumnType("int");

                    b.Property<int?>("IdTercero")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoDetalleProducto")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoReferencia")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("NombreOrazonSocial")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("NombreORazonSocial");

                    b.Property<string>("NumeroProducto")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sucursal")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("IdEntidadFinanciera");

                    b.HasIndex("IdTercero");

                    b.HasIndex("IdTipoDetalleProducto");

                    b.HasIndex("IdTipoReferencia");

                    b.ToTable("TercerosReferencias", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroSolicitud", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaCita")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaFormulario")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEstadoSolicitud")
                        .HasColumnType("int");

                    b.Property<int>("IdTercero")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("NumeroSolicitud")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdEstadoSolicitud");

                    b.HasIndex("IdTercero");

                    b.ToTable("TercerosSolicitudes", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroTipoDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTercero")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoDetalle")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTercero");

                    b.HasIndex("IdTipoDetalle");

                    b.ToTable("TercerosTiposDetalles", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Tipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("EstadoRegistro")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasDefaultValueSql("('A')");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Nomenclatura")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Nomenclatura" }, "UN_Tipos_Nomenclatura")
                        .IsUnique()
                        .HasFilter("[Nomenclatura] IS NOT NULL");

                    b.ToTable("Tipos", "Gral");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoDesvinculacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<bool>("AplicaAprobacionOtrasAreas")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaPortalAfiliado")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaRetractacion")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposDesvinculaciones", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoDetalle", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("EstadoRegistro")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipo");

                    b.ToTable("TiposDetalle", "Gral");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoFondoAyudaMutua", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoLiquidacion")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorComercial")
                        .IsUnicode(false)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorFijo")
                        .IsUnicode(false)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoLiquidacion");

                    b.ToTable("TiposFAM", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoLiquidacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTercero")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoLiquidacion")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTercero");

                    b.HasIndex("IdTipoLiquidacion");

                    b.ToTable("TiposLiquidaciones", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoPoliza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Ahorro")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<bool?>("Cabezote")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool?>("CoberturaAdicional")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdTipoQuienAsume")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<bool?>("NovedadAfectacion")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoQuienAsume");

                    b.ToTable("TiposPolizas", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoPolizaTipoPrestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoPoliza")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoPrestamo")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoPoliza");

                    b.HasIndex("IdTipoPrestamo");

                    b.ToTable("TiposPolizasTiposPrestamos", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoPrestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("AbonoExtraordinario")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdEstadoBus")
                        .HasColumnType("int");

                    b.Property<int?>("IdFormaDescuento")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoInteres")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("NumeroMaximaCuota")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RequiereSolicitud")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<decimal?>("TasaInteres")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("decimal(8,2)");

                    b.Property<bool?>("TraspasoPrestamo")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdEstadoBus");

                    b.HasIndex("IdFormaDescuento");

                    b.HasIndex("IdTipoInteres");

                    b.ToTable("TiposPrestamos", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoTraspaso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ActualizaEstadoAdministrativo")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<bool>("AplicaAprobacionOtrasAreas")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaDatosFinancieros")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaPortalAfiliado")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaRetractacion")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdUnidadTiempo")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TiempoTraspaso")
                        .IsUnicode(false)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdUnidadTiempo");

                    b.ToTable("TiposTraspasos", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoVinculacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<bool>("AplicaConcesionario")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaEmpresaOrigen")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaPlaca")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<bool>("AplicaVinculacionInterna")
                        .IsUnicode(false)
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposVinculaciones", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TiposEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposEstados", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.UsuarioDocumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDocumentoConcepto")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ruta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdDocumentoConcepto");

                    b.ToTable("UsuariosDocumentos", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.UsuarioTipoDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTipoDetalle")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoMaximo")
                        .IsUnicode(false)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoDetalle");

                    b.ToTable("UsuariosTiposDetalles", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Vehiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<decimal?>("CapacidadAutorizada")
                        .HasColumnType("decimal(8,0)");

                    b.Property<decimal?>("Cilindraje")
                        .HasColumnType("decimal(8,0)");

                    b.Property<string>("CodigoPv")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("CodigoPV");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("DeclaracionImportacion")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdClaseConbustible")
                        .HasColumnType("int");

                    b.Property<int?>("IdColorVehiculo")
                        .HasColumnType("int");

                    b.Property<int?>("IdConsesionario")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpresaOrigen")
                        .HasColumnType("int");

                    b.Property<int?>("IdEmpresaVinculacion")
                        .HasColumnType("int");

                    b.Property<int>("IdMarcaCarroceria")
                        .HasColumnType("int");

                    b.Property<int>("IdMarcaChasis")
                        .HasColumnType("int");

                    b.Property<int?>("IdMarcaChasisNavigationId")
                        .HasColumnType("int");

                    b.Property<int?>("IdModalidadServicio")
                        .HasColumnType("int");

                    b.Property<int>("IdModeloCarroceria")
                        .HasColumnType("int");

                    b.Property<int>("IdReferenciaChasis")
                        .HasColumnType("int");

                    b.Property<int?>("IdReferenciaChasisNavigationId")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoAutomotor")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoCarroceria")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("NumeroChasis")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("NumeroInterno")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("NumeroMotor")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("UbicacionCarpetaFisica")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<decimal?>("ValorAhorro")
                        .HasColumnType("decimal(8,0)");

                    b.Property<decimal?>("ValorComercial")
                        .HasColumnType("decimal(8,0)");

                    b.HasKey("Id");

                    b.HasIndex("IdConsesionario");

                    b.HasIndex("IdEmpresaOrigen");

                    b.HasIndex("IdMarcaCarroceria");

                    b.HasIndex("IdMarcaChasisNavigationId");

                    b.HasIndex("IdModeloCarroceria");

                    b.HasIndex("IdReferenciaChasisNavigationId");

                    b.ToTable("Vehiculos", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.VehiculoAfiliado", b =>
                {
                    b.Property<int>("IdAfiliado")
                        .HasColumnType("int");

                    b.Property<int>("IdVehiculo")
                        .HasColumnType("int");

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdTitular")
                        .HasColumnType("int");

                    b.Property<int?>("IdVehiculoNavigationId")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PorcentajeParticipacion")
                        .HasColumnType("int");

                    b.HasKey("IdAfiliado", "IdVehiculo");

                    b.HasIndex("IdVehiculoNavigationId");

                    b.ToTable("VehiculosAfiliados", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.VehiculoTercero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnuladoPor")
                        .HasColumnType("int");

                    b.Property<int>("CreadoPor")
                        .HasColumnType("int");

                    b.Property<string>("EstadoRegistro")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("FechaAnulacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaModificacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdTercero")
                        .HasColumnType("int");

                    b.Property<int>("IdVehiculo")
                        .HasColumnType("int");

                    b.Property<int?>("ModificadoPor")
                        .HasColumnType("int");

                    b.Property<string>("ObservacionEstado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTercero");

                    b.HasIndex("IdVehiculo");

                    b.ToTable("VehiculosTerceros", "App");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.AdjuntoSolicitud", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.InformacionSolicitud", "IdInformacionSolicitudNavigation")
                        .WithMany("AdjuntosSolicitudes")
                        .HasForeignKey("IdInformacionSolicitud");

                    b.Navigation("IdInformacionSolicitudNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.BeneficiarioPoliza", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoAseguradoNavigation")
                        .WithMany("AseguradosPolizas")
                        .HasForeignKey("IdTipoAsegurado")
                        .HasConstraintName("FK_BeneficiariosPolizas_TiposDetalles_IdTipoAsegurado");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoAseguradoConPrendaNavigation")
                        .WithMany("AseguradosPolizasConPrenda")
                        .HasForeignKey("IdTipoAseguradoConPrenda")
                        .HasConstraintName("FK_BeneficiariosPolizas_TiposDetalles_IdTipoAseguradoConPrenda");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoBeneficiarioNavigation")
                        .WithMany("BeneficiariosPolizas")
                        .HasForeignKey("IdTipoBeneficiario")
                        .HasConstraintName("FK_BeneficiariosPolizas_TiposDetalles_IdTipoBeneficiario");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoBeneficiarioConPrendaNavigation")
                        .WithMany("BeneficiariosPolizasConPrenda")
                        .HasForeignKey("IdTipoBeneficiarioConPrenda")
                        .HasConstraintName("FK_BeneficiariosPolizas_TiposDetalles_IdTipoBeneficiarioConPrenda");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoPoliza", "IdTipoPolizaNavigation")
                        .WithMany("TiposPolizasBeneficiarios")
                        .HasForeignKey("IdTipoPoliza")
                        .HasConstraintName("FK_BeneficiariosPolizas_TiposPolizas_IdTipoPoliza")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoTomadorNavigation")
                        .WithMany("TomadoresPolizas")
                        .HasForeignKey("IdTipoTomador")
                        .HasConstraintName("FK_BeneficiariosPolizas_TiposDetalles_IdTipoTomador");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoTomadorConPrendaNavigation")
                        .WithMany("TomadoresPolizasConPrenda")
                        .HasForeignKey("IdTipoTomadorConPrenda")
                        .HasConstraintName("FK_BeneficiariosPolizas_TiposDetalles_IdTipoTomadorConPrenda");

                    b.Navigation("IdTipoAseguradoConPrendaNavigation");

                    b.Navigation("IdTipoAseguradoNavigation");

                    b.Navigation("IdTipoBeneficiarioConPrendaNavigation");

                    b.Navigation("IdTipoBeneficiarioNavigation");

                    b.Navigation("IdTipoPolizaNavigation");

                    b.Navigation("IdTipoTomadorConPrendaNavigation");

                    b.Navigation("IdTipoTomadorNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Cabezote", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdTerceroNavigation")
                        .WithMany("TercerosCabezotes")
                        .HasForeignKey("IdTercero")
                        .HasConstraintName("FK_Cabezotes_Terceros_IdTercero")
                        .IsRequired();

                    b.Navigation("IdTerceroNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Campo", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoOperacionNavigation")
                        .WithMany("Campo")
                        .HasForeignKey("IdTipoOperacion")
                        .HasConstraintName("FK_Campos_TiposDetalles_IdTipoOperacion")
                        .IsRequired();

                    b.Navigation("IdTipoOperacionNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.CentroOperacion", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdAgenciaNavigation")
                        .WithMany("AgenciasCentroOperacion")
                        .HasForeignKey("IdAgencia")
                        .HasConstraintName("FK_CentrosOperaciones_Terceros_IdAgencia")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdEmpresaNavigation")
                        .WithMany("EmpresasCentroOperacion")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("FK_CentrosOperaciones_Terceros_IdEmpresa")
                        .IsRequired();

                    b.Navigation("IdAgenciaNavigation");

                    b.Navigation("IdEmpresaNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.DetallePrestamo", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Prestamo", "IdPrestamoNavigation")
                        .WithMany()
                        .HasForeignKey("IdPrestamoNavigationId");

                    b.Navigation("IdPrestamoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.DetalleProcesoNomina", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.NominaPeriodoProceso", "IdNominaPeriodoProcesoNavigation")
                        .WithMany("DetallesProcesosNominas")
                        .HasForeignKey("IdNominaPeriodoProceso")
                        .HasConstraintName("FK_DetallesProcesosNominas_NominasPeriodosProcesos_IdParametrizacion");

                    b.Navigation("IdNominaPeriodoProcesoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.DocumentoConceptoProceso", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.DocumentoConcepto", "IdDocumentoConceptoNavigation")
                        .WithMany("DocumentoConceptoProceso")
                        .HasForeignKey("IdDocumentoConcepto")
                        .HasConstraintName("FK_DocumentosConceptosProcesos_DocumentoConcepto_IdDocumentoConcepto")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.ParametrizacionDetalle", "IdProcesoNavigation")
                        .WithMany("DocumentoConceptoProceso")
                        .HasForeignKey("IdProceso")
                        .HasConstraintName("FK_DocumentosConceptosProcesos_Parametrizaciones_IdProceso")
                        .IsRequired();

                    b.Navigation("IdDocumentoConceptoNavigation");

                    b.Navigation("IdProcesoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Embargo", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdEntidadFinancieraNavigation")
                        .WithMany("EntidadesFinancierasEmbargo")
                        .HasForeignKey("IdEntidadFinanciera")
                        .HasConstraintName("FK_Embargos_Terceros_IdEntidadFinanciera")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdTerceroNavigation")
                        .WithMany("Embargos")
                        .HasForeignKey("IdTercero")
                        .HasConstraintName("FK_Embargos_Terceros_IdTercero")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoCuentaNavigation")
                        .WithMany("TiposDetalleIdTipoDetalleEmbargosNavigations")
                        .HasForeignKey("IdTipoCuenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdEntidadFinancieraNavigation");

                    b.Navigation("IdTerceroNavigation");

                    b.Navigation("IdTipoCuentaNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Fondo", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoFondoNavigation")
                        .WithMany("Fondos")
                        .HasForeignKey("IdTipoFondo")
                        .HasConstraintName("FK_Fondos_TipoDetalle_TipoFondo")
                        .IsRequired();

                    b.Navigation("IdTipoFondoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.GestionAnticipo", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.GestionSolicitudUsuario", "IdUsuarioAprobacionNavigation")
                        .WithMany("UsuariosAprobacionGestionAnticipo")
                        .HasForeignKey("IdUsuarioAprobacion")
                        .HasConstraintName("FK_GestionesAnticipos_GestionSolicitudUsuario_IdUsuarioAprobacion")
                        .IsRequired();

                    b.Navigation("IdUsuarioAprobacionNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.GestionSolicitudUsuario", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoProcesoNavigation")
                        .WithMany("TipoProcesoNavigationGestionSolicitud")
                        .HasForeignKey("IdTipoProceso")
                        .HasConstraintName("FK_GestionesSolicitudesUsuarios_TipoDetalle_IdTipoProceso")
                        .IsRequired();

                    b.Navigation("IdTipoProcesoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialBeneficiarioPoliza", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.BeneficiarioPoliza", "IdBeneficiarioPolizaNavigation")
                        .WithMany("BeneficiariosPolizasHistorial")
                        .HasForeignKey("IdBeneficiarioPoliza")
                        .HasConstraintName("FK_HistorialBeneficiariosPolizas_TiposPolizas_IdBeneficiarioPoliza");

                    b.Navigation("IdBeneficiarioPolizaNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialCabezote", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Cabezote", "IdCabezoteNavigation")
                        .WithMany("CabezotesHistorial")
                        .HasForeignKey("IdCabezote")
                        .HasConstraintName("FK_HistorialCabezotes_Cabezotes_IdCabezote")
                        .IsRequired();

                    b.Navigation("IdCabezoteNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialCampo", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Campo", "IdCampoNavigation")
                        .WithMany("HistorialCampo")
                        .HasForeignKey("IdCampo")
                        .HasConstraintName("FK_HistorialCampos_Campos_IdCampo")
                        .IsRequired();

                    b.Navigation("IdCampoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialCentroOperacion", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.CentroOperacion", "IdCentroOperacionNavigation")
                        .WithMany("HistorialCentroOperacion")
                        .HasForeignKey("IdCentroOperacion")
                        .HasConstraintName("FK_HistorialCentrosOperaciones_CentrosOperaciones_IdCentroOperacion")
                        .IsRequired();

                    b.Navigation("IdCentroOperacionNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialDocumentoConcepto", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.DocumentoConcepto", "IdDocumentoConceptoNavigation")
                        .WithMany("HistorialDocumentoConcepto")
                        .HasForeignKey("IdDocumentoConcepto")
                        .HasConstraintName("FK_HistorialDocumentosConceptos_DocumentosConceptos_IdDocumentoConcepto")
                        .IsRequired();

                    b.Navigation("IdDocumentoConceptoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialDocumentoConceptoProceso", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.DocumentoConceptoProceso", "IdDocumentoConceptoProcesoNavigation")
                        .WithMany("HistorialDocumentoConceptoProceso")
                        .HasForeignKey("IdDocumentoConceptoProceso")
                        .HasConstraintName("FK_HistorialDocumentosConceptosProcesos_DocumentosConceptosProcesos_IdDocumentoConceptoProceso")
                        .IsRequired();

                    b.Navigation("IdDocumentoConceptoProcesoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialEstadoAdministrativo", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.EstadoAdministrativo", "IdEstadoAdministrativoNavigation")
                        .WithMany("HistorialEstadoAdministrativo")
                        .HasForeignKey("IdEstadoAdministrativo")
                        .HasConstraintName("FK_HistorialEstadosAdministrativos_EstadosAdministrativos_IdEstadoAdministrativo")
                        .IsRequired();

                    b.Navigation("IdEstadoAdministrativoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialGestionAnticipo", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.GestionAnticipo", "IdGestionAnticipoNavigation")
                        .WithMany("HistorialGestionAnticipo")
                        .HasForeignKey("IdGestionAnticipo")
                        .HasConstraintName("FK_HistorialGestionesAnticipos_GestionesAnticipos_IdGestionAnticipo")
                        .IsRequired();

                    b.Navigation("IdGestionAnticipoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialGestionSolicitudUsuario", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.GestionSolicitudUsuario", "IdGestionSolicitudUsuarioNavigation")
                        .WithMany("HistorialGestionSolicitudUsuario")
                        .HasForeignKey("IdGestionSolicitudUsuario")
                        .HasConstraintName("FK_HistorialGestionesSolicitudesUsuarios_GestionesSolicitudesUsuarios_IdGestionSolicitudUsuario")
                        .IsRequired();

                    b.Navigation("IdGestionSolicitudUsuarioNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialMarcaChasis", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.MarcaChasis", "IdMarcaChasisNavigation")
                        .WithMany("HistorialMarcaChasis")
                        .HasForeignKey("IdMarcaChasis")
                        .HasConstraintName("FK_HistorialMarcasChasis_MarcasChasis_IdMarcaChasis")
                        .IsRequired();

                    b.Navigation("IdMarcaChasisNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialModalidadServicio", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.ModalidadServicio", "IdModalidadServicioNavigation")
                        .WithMany("HistorialModalidadServicio")
                        .HasForeignKey("IdModalidadServicio")
                        .HasConstraintName("FK_HistorialModalidadesServicios_ModalidadesServicios_IdModalidadServicio")
                        .IsRequired();

                    b.Navigation("IdModalidadServicioNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialMotivoCambioEstado", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.MotivoCambioEstado", "IdMotivoCambioEstadoNavigation")
                        .WithMany("HistorialMotivoCambioEstado")
                        .HasForeignKey("IdMotivoCambioEstado")
                        .HasConstraintName("FK_HistorialMotivosCambiosEstados_MotivosCambiosEstados_IdMotivoCambioEstado")
                        .IsRequired();

                    b.Navigation("IdMotivoCambioEstadoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialMotivoCambioTarjetaPropiedad", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.MotivoCambioTarjetaPropiedad", "IdMotivoCambioTarjetaPropiedadNavigation")
                        .WithMany("HistorialMotivoCambioTarjetaPropiedad")
                        .HasForeignKey("IdMotivoCambioTarjetaPropiedad")
                        .HasConstraintName("FK_HistorialMotivosCambiosEstadosTarjetasPropiedad_MotivosCambiosEstadosTarjetasPropiedad_IdMotivoCambioTarjetaPropiedad")
                        .IsRequired();

                    b.Navigation("IdMotivoCambioTarjetaPropiedadNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialMotivoDesvinculacion", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.MotivoDesvinculacion", "IdMotivoDesvinculacionNavigation")
                        .WithMany("HistorialMotivoDesvinculacion")
                        .HasForeignKey("IdMotivoDesvinculacion")
                        .HasConstraintName("FK_HistorialMotivosDesvinculaciones_MotivosDesvinculaciones_IdMotivoDesvinculacion")
                        .IsRequired();

                    b.Navigation("IdMotivoDesvinculacionNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialMotivoRenovacionPoliza", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.MotivoRenovacionPoliza", "IdMotivoRenovacionPolizaNavigation")
                        .WithMany("HistorialMotivoRenovacionPoliza")
                        .HasForeignKey("IdMotivoRenovacionPoliza")
                        .HasConstraintName("FK_HistorialMotivosRenovacionesPolizas_MotivosRenovacionesPolizas_IdMotivoRenovacionPoliza")
                        .IsRequired();

                    b.Navigation("IdMotivoRenovacionPolizaNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialMotivoRenovacionPolizaTipoPoliza", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.MotivoRenovacionPolizaTipoPoliza", "IdMotivoRenovacionTipoPolizaNavigation")
                        .WithMany("HistorialMotivoRenovacionPolizaTipoPoliza")
                        .HasForeignKey("IdMotivoRenovacionTipoPoliza")
                        .HasConstraintName("FK_HistorialMotivosRenovacionesPolizasTiposPolizas_MotivosRenovacionesPolizasTiposPoliza_IdMotivoRenovacionTipoPoliza")
                        .IsRequired();

                    b.Navigation("IdMotivoRenovacionTipoPolizaNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialNivelServicio", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.NivelServicio", "IdNivelServicioNavigation")
                        .WithMany("HistorialNivelServicio")
                        .HasForeignKey("IdNivelServicio")
                        .HasConstraintName("FK_HistorialNivelesServicios_NivelesServicios_IdNivelServicio")
                        .IsRequired();

                    b.Navigation("IdNivelServicioNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialParametrizacion", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Parametrizacion", "IdParametrizacionNavigation")
                        .WithMany("HistorialParametrizacion")
                        .HasForeignKey("IdParametrizacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdParametrizacionNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialParametrizacionDetalle", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.ParametrizacionDetalle", "IdParametrizacionDetalleNavigation")
                        .WithMany("HistorialParametrizacionDetalle")
                        .HasForeignKey("IdParametrizacionDetalle")
                        .HasConstraintName("FK_HistorialParametrizacionesDetalles_ParametrizacionesDetalles_IdParametrizacionDetalle")
                        .IsRequired();

                    b.Navigation("IdParametrizacionDetalleNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialParametro", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Parametro", "IdParametroNavigation")
                        .WithMany("HistorialParametro")
                        .HasForeignKey("IdParametro")
                        .HasConstraintName("FK_Parametros_Parametros_IdParametro")
                        .IsRequired();

                    b.Navigation("IdParametroNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialParametroGeneralProceso", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.ParametroGeneralProceso", "IdParametroGeneralProcesoNavigation")
                        .WithMany("HistorialParametroGeneralProceso")
                        .HasForeignKey("IdParametroGeneralProceso")
                        .HasConstraintName("FK_HistorialParametrosGeneralesProcesos_ParametrosGeneralesProcesos_IdParametroGeneral")
                        .IsRequired();

                    b.Navigation("IdParametroGeneralProcesoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialPeriodo", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Periodo", "IdPeriodoNavigation")
                        .WithMany("HistorialPeriodo")
                        .HasForeignKey("IdPeriodo")
                        .HasConstraintName("FK_HistorialPeriodos_Periodos_IdPeriodo")
                        .IsRequired();

                    b.Navigation("IdPeriodoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialPorcentajeCorrespondiente", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.PorcentajeCorrespondiente", "IdPorcentajeCorrespondienteNavigation")
                        .WithMany("HistorialPorcentajeCorrespondiente")
                        .HasForeignKey("IdPorcentajeCorrespondiente")
                        .HasConstraintName("FK_HistorialPorcentajesCorrespondientes_PorcentajesCorrespondientes_IdPorcentajeCorrespondiente")
                        .IsRequired();

                    b.Navigation("IdPorcentajeCorrespondienteNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialProducto", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Producto", "IdProductoNavigation")
                        .WithMany("HistorialProducto")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_HistorialProductos_Productos_IdProducto")
                        .IsRequired();

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialReferenciaChasis", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.ReferenciaChasis", "IdReferenciaChasisNavigation")
                        .WithMany("HistorialReferenciaChasis")
                        .HasForeignKey("IdReferenciaChasis")
                        .HasConstraintName("FK_HistorialReferenciasChasis_ReferenciasChasis_IdReferenciaChasis")
                        .IsRequired();

                    b.Navigation("IdReferenciaChasisNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTercero", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdTerceroNavigation")
                        .WithMany("HistorialTerceros")
                        .HasForeignKey("IdTercero")
                        .HasConstraintName("FK_HistorialTerceros_Terceros_IdTercero");

                    b.Navigation("IdTerceroNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTerceroDetalle", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TerceroDetalle", "IdTerceroDetalleNavigation")
                        .WithMany("HistorialTerceroDetalles")
                        .HasForeignKey("IdTerceroDetalle")
                        .HasConstraintName("FK_HistorialTerceroDetalles_TerceroDetalles_IdTerceroDetalle")
                        .IsRequired();

                    b.Navigation("IdTerceroDetalleNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTerceroSolicitud", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TerceroSolicitud", "IdTerceroSolicitudNavigation")
                        .WithMany("HistorialTerceroSolicitud")
                        .HasForeignKey("IdTerceroSolicitud")
                        .HasConstraintName("FK_HistorialTerceroSolicituds_TerceroSolicitudes_IdTerceroSolicitud")
                        .IsRequired();

                    b.Navigation("IdTerceroSolicitudNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTerceroTipoDetalle", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TerceroTipoDetalle", "IdTerceroTipoDetalleNavigation")
                        .WithMany("HistorialTerceroTipoDetalle")
                        .HasForeignKey("IdTerceroTipoDetalle")
                        .HasConstraintName("FK_HistorialTercerosTiposDetalles_TercerosTiposDetalles_IdTerceroTipoDetalle")
                        .IsRequired();

                    b.Navigation("IdTerceroTipoDetalleNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTipoDesvinculacion", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDesvinculacion", "IdTipoDesvinculacionNavigation")
                        .WithMany("HistorialTipoDesvinculacion")
                        .HasForeignKey("IdTipoDesvinculacion")
                        .HasConstraintName("FK_HistorialTiposDesvinculaciones_TiposDesvinculaciones_IdTipoDesvinculacion")
                        .IsRequired();

                    b.Navigation("IdTipoDesvinculacionNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTipoFondoAyudaMutua", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoFondoAyudaMutua", "IdTipoFondoAyudaMutuaNavigation")
                        .WithMany("HistorialTipoFondoAyudaMutua")
                        .HasForeignKey("IdTipoFondoAyudaMutua")
                        .HasConstraintName("FK_HistorialTiposFAM_TiposFAM_IdTipoFondoAyudaMutua")
                        .IsRequired();

                    b.Navigation("IdTipoFondoAyudaMutuaNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTipoLiquidacion", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoLiquidacion", "IdTipoLiquidacionRelacionNavigation")
                        .WithMany("HistorialTipoLiquidacion")
                        .HasForeignKey("IdTipoLiquidacionRelacion")
                        .HasConstraintName("FK_HistorialTiposLiquidaciones_TiposLiquidaciones_IdTipoLiquidacionRelacion")
                        .IsRequired();

                    b.Navigation("IdTipoLiquidacionRelacionNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTipoPoliza", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoPoliza", "IdTipoPolizaNavigation")
                        .WithMany("HistorialTipoPoliza")
                        .HasForeignKey("IdTipoPoliza")
                        .HasConstraintName("FK_HistorialTiposPolizas_TiposPolizas_IdTipoPoliza")
                        .IsRequired();

                    b.Navigation("IdTipoPolizaNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTipoPolizaTipoPrestamo", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoPolizaTipoPrestamo", "IdTipoPolizaTipoPrestamoNavigation")
                        .WithMany("HistorialTipoPolizaTipoPrestamo")
                        .HasForeignKey("IdTipoPolizaTipoPrestamo")
                        .HasConstraintName("FK_HistorialTiposPolizasTiposPrestamos_TiposPolizasTiposPrestamos_IdTipoPolizaTipoPrestamo")
                        .IsRequired();

                    b.Navigation("IdTipoPolizaTipoPrestamoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTipoPrestamo", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoPrestamo", "IdTipoPrestamoNavigation")
                        .WithMany("HistorialTipoPrestamo")
                        .HasForeignKey("IdTipoPrestamo")
                        .HasConstraintName("FK_HistorialTiposPrestamos_TiposPrestamos_IdTipoPrestamo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TiposEstado", null)
                        .WithMany("TiposPrestamos")
                        .HasForeignKey("TiposEstadoId");

                    b.Navigation("IdTipoPrestamoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTipoTraspaso", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoTraspaso", "IdTipoTraspasoNavigation")
                        .WithMany("HistorialTipoTraspaso")
                        .HasForeignKey("IdTipoTraspaso")
                        .HasConstraintName("FK_HistorialTiposTraspasos_TiposTraspasos_IdTipoTraspaso")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdTipoTraspasoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialTipoVinculacion", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoVinculacion", "IdTipoVinculacionNavigation")
                        .WithMany("HistorialTipoVinculacion")
                        .HasForeignKey("IdTipoVinculacion")
                        .HasConstraintName("FK_HistorialTiposVinculaciones_TiposVinculaciones_IdTipoVinculacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdTipoVinculacionNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialUsuarioDocumento", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.UsuarioDocumento", "IdusuarioDocumentonavigation")
                        .WithMany("HistorialUsuarioDocumento")
                        .HasForeignKey("IdusuarioDocumento")
                        .HasConstraintName("FK_HistorialUsuariosDocumentos_UsuariosDocumentos_IdusuarioDocumento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdusuarioDocumentonavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.HistorialUsuarioTipoDetalle", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.UsuarioTipoDetalle", "IdUsuarioTipoDetalleNavigation")
                        .WithMany("HistorialUsuarioTipoDetalle")
                        .HasForeignKey("IdUsuarioTipoDetalle")
                        .HasConstraintName("FK_HistorialUsuariosTiposDetalles_UsuariosTiposDetalles_IdUsuarioTipoDetalle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdUsuarioTipoDetalleNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.InformacionSolicitud", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdTerceroNavigation")
                        .WithMany("InformacionSolicitudes")
                        .HasForeignKey("IdTercero")
                        .HasConstraintName("FK_InformacionesSolicitudes_Terceros_IdTercero");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoDetallePagoNavigation")
                        .WithMany("InformacionSolicitudeIdTipoDetallePagoNavigations")
                        .HasForeignKey("IdTipoDetallePago")
                        .HasConstraintName("FK_InformacionesSolicitudes_TiposDetalles_IdTipoPago");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoDocumentoAfiliadoNavigation")
                        .WithMany("InformacionSolicitudeIdTipoDocumentoAfiliadoNavigations")
                        .HasForeignKey("IdTipoDocumentoAfiliado")
                        .HasConstraintName("FK_InformacionesSolicitudes_TiposDetalles_IdTipoDocumentoAfiliado");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoDocumentoDetallePagoNavigation")
                        .WithMany("InformacionSolicitudeIdTipoDocumentoDetallePagoNavigations")
                        .HasForeignKey("IdTipoDocumentoDetallePago")
                        .HasConstraintName("FK_InformacionesSolicitudes_TiposDetalles_IdTipoDocumentoDetallePago");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoPersonaDetallePagoNavigation")
                        .WithMany("InformacionSolicitudeIdTipoPersonaDetallePagoNavigations")
                        .HasForeignKey("IdTipoPersonaDetallePago")
                        .HasConstraintName("FK_InformacionesSolicitudes_TiposDetalles_IdTipoPersonaDetallePago");

                    b.Navigation("IdTerceroNavigation");

                    b.Navigation("IdTipoDetallePagoNavigation");

                    b.Navigation("IdTipoDocumentoAfiliadoNavigation");

                    b.Navigation("IdTipoDocumentoDetallePagoNavigation");

                    b.Navigation("IdTipoPersonaDetallePagoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.ModeloCarroceria", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.MarcaCarroceria", "IdMarcaCarroceriaNavigation")
                        .WithMany("ModelosCarroceria")
                        .HasForeignKey("IdMarcaCarroceria")
                        .HasConstraintName("fk_ModelosCarrocerias_MarcasCarroceria")
                        .IsRequired();

                    b.Navigation("IdMarcaCarroceriaNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.MotivoCambioEstado", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.EstadoAdministrativo", "IdEstadoAdministrativoNavigation")
                        .WithMany("EstadosBusMotivoCambioEstado")
                        .HasForeignKey("IdEstadoAdministrativo")
                        .HasConstraintName("FK_MotivosCambiosEstados_EstadoAdministrativo_IdEstadoAdministrativo")
                        .IsRequired();

                    b.Navigation("IdEstadoAdministrativoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.MotivoDesvinculacion", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDesvinculacion", "IdTipoDesvinculacionNavigation")
                        .WithMany("MotivoDesvinculacion")
                        .HasForeignKey("IdTipoDesvinculacion")
                        .HasConstraintName("FK_MotivosDesvinculaciones_TipoDesvinculacion_IdTipoDesvinculacion")
                        .IsRequired();

                    b.Navigation("IdTipoDesvinculacionNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.MotivoRenovacionPoliza", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdClaseRenovacionNavigation")
                        .WithMany("ClasesRenovacion")
                        .HasForeignKey("IdClaseRenovacion")
                        .HasConstraintName("FK_MotivosRenovacionesPolizas_TiposDetalles_IdClaseRenovacion")
                        .IsRequired();

                    b.Navigation("IdClaseRenovacionNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.MotivoRenovacionPolizaTipoPoliza", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.MotivoRenovacionPoliza", "IdMotivoRenovacionPolizaNavigation")
                        .WithMany("MotivoRenovacionPolizaTipoPolizas")
                        .HasForeignKey("IdMotivoRenovacionPoliza")
                        .HasConstraintName("FK_MotivosRenovacionesPolizasTiposPolizas_MotivoRenovacionPoliza_IdMotivoRenovacionPoliza")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoPoliza", "IdTipoPolizaNavigation")
                        .WithMany("MotivoRenovacionPolizaTipoPolizas")
                        .HasForeignKey("IdTipoPoliza")
                        .HasConstraintName("FK_MotivosRenovacionesPolizasTiposPolizas_TiposPolizas_IdTipoPoliza")
                        .IsRequired();

                    b.Navigation("IdMotivoRenovacionPolizaNavigation");

                    b.Navigation("IdTipoPolizaNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.NivelServicio", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.CentroOperacion", "IdCentroOperativoNavigation")
                        .WithMany("CentrosOperacionNivelServicios")
                        .HasForeignKey("IdCentroOperativo")
                        .HasConstraintName("FK_NivelesServicios_Terceros_IdCentroOperativo")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdEmpresaOperativaNavigation")
                        .WithMany("EmpresasNivelServicios")
                        .HasForeignKey("IdEmpresaOperativa")
                        .HasConstraintName("FK_NivelesServicios_Terceros_IdEmpresaOperativa")
                        .IsRequired();

                    b.Navigation("IdCentroOperativoNavigation");

                    b.Navigation("IdEmpresaOperativaNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.NominaPeriodoProceso", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Nomina", "IdNominaNavigation")
                        .WithMany("NominasPeriodosProcesos")
                        .HasForeignKey("IdNomina")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.HistorialPeriodo", "IdPeriodoNavigation")
                        .WithMany()
                        .HasForeignKey("IdPeriodoNavigationId");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.ProcesoNomina", "IdProcesoNominaNavigation")
                        .WithMany("NominasPeriodosProcesos")
                        .HasForeignKey("IdProcesoNomina")
                        .IsRequired();

                    b.Navigation("IdNominaNavigation");

                    b.Navigation("IdPeriodoNavigation");

                    b.Navigation("IdProcesoNominaNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Novedad", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.NovedadCausal", "IdNovedadCausalNavigation")
                        .WithMany("Novedades")
                        .HasForeignKey("IdNovedadCausal")
                        .HasConstraintName("FK_Novedades_NovedadesCausales_IdNovedadCausal")
                        .IsRequired();

                    b.Navigation("IdNovedadCausalNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.ParametrizacionDetalle", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Parametrizacion", "IdParametrizacionNavigation")
                        .WithMany("ParametrizacionesDetalles")
                        .HasForeignKey("IdParametrizacion")
                        .HasConstraintName("FK_ParametrizacionesDetalles_Parametrizacion_IdParametrizacion")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.ParametrizacionDetalle", "IdParametrizacionDetallePadreNavigation")
                        .WithMany("ParametrizacionesDetallePadre")
                        .HasForeignKey("IdParametrizacionDetallePadre")
                        .HasConstraintName("FK_ParametrizacionesDetalles_ParametrizacionesDetalles_IdParametrizacionDetallePadre");

                    b.Navigation("IdParametrizacionDetallePadreNavigation");

                    b.Navigation("IdParametrizacionNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Parametro", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdTerceroNavigation")
                        .WithMany("TercerosParametro")
                        .HasForeignKey("IdTercero")
                        .HasConstraintName("FK_Parametros_Terceros_IdTercero")
                        .IsRequired();

                    b.Navigation("IdTerceroNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.ParametroGeneralProceso", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.MotivoCambioEstado", "IdMotivoCambioEstadoNavigation")
                        .WithMany("MotivoCambioEstadoParametroProceso")
                        .HasForeignKey("IdMotivoCambioEstado")
                        .HasConstraintName("FK_ParametrosGeneralesProcesos_MotivosCambiosEstados_IdMotivoCambioEstado")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.ParametrizacionDetalle", "IdTipoProcesoNavigation")
                        .WithMany("TiposProcesosParametroProceso")
                        .HasForeignKey("IdTipoProceso")
                        .HasConstraintName("FK_ParametrosGeneralesProcesos_TiposDetalles_IdTipoProceso")
                        .IsRequired();

                    b.Navigation("IdMotivoCambioEstadoNavigation");

                    b.Navigation("IdTipoProcesoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Poliza", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoPoliza", "IdTipoPolizaNavigation")
                        .WithMany("Polizas")
                        .HasForeignKey("IdTipoPoliza")
                        .HasConstraintName("fk_Polizas_TipoPolizas")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.Vehiculo", "IdVehiculoNavigation")
                        .WithMany("Polizas")
                        .HasForeignKey("IdVehiculo")
                        .HasConstraintName("fk_Polizas_Vehiculos");

                    b.Navigation("IdTipoPolizaNavigation");

                    b.Navigation("IdVehiculoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.PolizaDetalle", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdIntermediarioNavigation")
                        .WithMany("IntermediariosPolizaDetalle")
                        .HasForeignKey("IdIntermediario")
                        .HasConstraintName("fk_PolizasDetalles_Intermediario")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.Poliza", "IdPolizaNavigation")
                        .WithMany("PolizasDetalles")
                        .HasForeignKey("IdPoliza")
                        .HasConstraintName("fk_PolizasDetalles_Polizas")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdAseguradoraNavigation")
                        .WithMany("AseguradorasPolizaDetalle")
                        .HasForeignKey("IdPoliza")
                        .HasConstraintName("fk_PolizasDetalles_Aseguradora")
                        .IsRequired();

                    b.Navigation("IdAseguradoraNavigation");

                    b.Navigation("IdIntermediarioNavigation");

                    b.Navigation("IdPolizaNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.PorcentajeCorrespondiente", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.ModalidadServicio", "IdModalidadServicioNavigation")
                        .WithMany("PorcentajeCorrespondiente")
                        .HasForeignKey("IdModalidadServicio")
                        .HasConstraintName("FK_PorcentajesCorrespondientes_ModalidadesServicios_IdModalidadServicio")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdTerceroNavigation")
                        .WithMany()
                        .HasForeignKey("IdTercero")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoPropietarioNavigation")
                        .WithMany("PorcentajeCorrespondiente")
                        .HasForeignKey("IdTipoPropietario")
                        .HasConstraintName("FK_PorcentajesCorrespondientes_TiposDetalles_IdTipoPropietario")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.Vehiculo", "IdVehiculoNavigation")
                        .WithMany("VehiculosPorcentajesCorrespondientes")
                        .HasForeignKey("IdVehiculo")
                        .HasConstraintName("FK_PorcentajesCorrespondientes_Vehiculos_IdVehiculo")
                        .IsRequired();

                    b.Navigation("IdModalidadServicioNavigation");

                    b.Navigation("IdTerceroNavigation");

                    b.Navigation("IdTipoPropietarioNavigation");

                    b.Navigation("IdVehiculoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Prestamo", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Periodo", "IdPeriodoInicialNavigation")
                        .WithMany("Prestamos")
                        .HasForeignKey("IdPeriodoInicial")
                        .HasConstraintName("fk_Prestamos_Periodo");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoPrestamo", "IdTipoPrestamoNavigation")
                        .WithMany("Prestamos")
                        .HasForeignKey("IdTipoPrestamo")
                        .HasConstraintName("fk_Prestamos_TiposPrestamos")
                        .IsRequired();

                    b.Navigation("IdPeriodoInicialNavigation");

                    b.Navigation("IdTipoPrestamoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Producto", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoLiquidacion", "IdTipoLiquidacionNavigation")
                        .WithMany("Producto")
                        .HasForeignKey("IdTipoLiquidacion")
                        .HasConstraintName("FK_Productos_TiposLiquidaciones_IdTipoLiquidacion")
                        .IsRequired();

                    b.Navigation("IdTipoLiquidacionNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.ReferenciaChasis", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.MarcaChasis", "IdMarcaChasisNavigation")
                        .WithMany("ReferenciaChasis")
                        .HasForeignKey("IdMarcaChasis")
                        .HasConstraintName("FK_ReferenciasChasis_MarcasChasis_IdMarcaChasis")
                        .IsRequired();

                    b.Navigation("IdMarcaChasisNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Tercero", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdTerceroPadreNavigation")
                        .WithMany("InverseIdTerceroPadreNavigation")
                        .HasForeignKey("IdTerceroPadre");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoIdentificacionNavigation")
                        .WithMany("TerceroIdTipoIdentificacionNavigations")
                        .HasForeignKey("IdTipoIdentificacion")
                        .HasConstraintName("FK_Terceros_TipoDetalle_IdTipoIdentificacion");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoPersonaNavigation")
                        .WithMany("TerceroIdTipoPersonaNavigations")
                        .HasForeignKey("IdTipoPersona")
                        .HasConstraintName("FK_Terceros_TipoDetalle_IdTipoPersona");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoTerceroNavigation")
                        .WithMany("TerceroIdTipoTerceroNavigations")
                        .HasForeignKey("IdTipoTercero")
                        .HasConstraintName("FK_Terceros_TipoDetalle_IdTipoTercero")
                        .IsRequired();

                    b.Navigation("IdTerceroPadreNavigation");

                    b.Navigation("IdTipoIdentificacionNavigation");

                    b.Navigation("IdTipoPersonaNavigation");

                    b.Navigation("IdTipoTerceroNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroActivo", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdTerceroNavigation")
                        .WithMany("TercerosActivos")
                        .HasForeignKey("IdTercero");

                    b.Navigation("IdTerceroNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroDetalle", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.ActividadEconomica", "IdActividadEconomicaNavigation")
                        .WithMany("TercerosDetalles")
                        .HasForeignKey("IdActividadEconomica");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdTerceroNavigation")
                        .WithMany("TercerosDetalles")
                        .HasForeignKey("IdTercero");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoDetalleNivelEducativoNavigation")
                        .WithMany("TercerosDetalleIdTipoDetalleNivelEducativoNavigations")
                        .HasForeignKey("IdTipoDetalleNivelEducativo")
                        .HasConstraintName("FK_TercerosDetalles_TiposDetalles_IdTipoDetalleNivelEducacion");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoDetalleOcupacionNavigation")
                        .WithMany("TercerosDetalleIdTipoDetalleOcupacionNavigations")
                        .HasForeignKey("IdTipoDetalleOcupacion")
                        .HasConstraintName("FK_TercerosDetalles_TiposDetalles_IdTipoDetalleOcupacion");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", null)
                        .WithMany("TercerosDetalleIdTipoDetalleInternacionalNavigations")
                        .HasForeignKey("TipoDetalleId");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", null)
                        .WithMany("TercerosDetalleIdTipoDetallePoderPublicoNavigations")
                        .HasForeignKey("TipoDetalleId1");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", null)
                        .WithMany("TercerosDetalleIdTipoDetalleReconocimientoPublicoNavigations")
                        .HasForeignKey("TipoDetalleId2");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", null)
                        .WithMany("TercerosDetalleIdTipoDetalleRecursoPublicoNavigations")
                        .HasForeignKey("TipoDetalleId3");

                    b.Navigation("IdActividadEconomicaNavigation");

                    b.Navigation("IdTerceroNavigation");

                    b.Navigation("IdTipoDetalleEstadoCivilNavigation");

                    b.Navigation("IdTipoDetalleNivelEducativoNavigation");

                    b.Navigation("IdTipoDetalleOcupacionNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroInformacionFamiliar", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdTerceroNavigation")
                        .WithMany("TercerosInformacionesFamiliares")
                        .HasForeignKey("IdTercero")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoDetalleParentescoNavigation")
                        .WithMany("TercerosInformacionesFamiliareIdTipoDetalleParentescoNavigations")
                        .HasForeignKey("IdTipoDetalleParentesco")
                        .HasConstraintName("FK_TercerosInformacionesFamiliares_TiposDetalles_IdTipoDetalleParentesco")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoDetalleProfesionNavigation")
                        .WithMany("TercerosInformacionesFamiliareIdTipoDetalleProfesionNavigations")
                        .HasForeignKey("IdTipoDetalleProfesion")
                        .HasConstraintName("FK_TercerosInformacionesFamiliares_TiposDetalles_IdTipoDetalleProfesion")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoIdentificacionNavigation")
                        .WithMany("TercerosInformacionesFamiliareIdTipoIdentificacionNavigations")
                        .HasForeignKey("IdTipoIdentificacion")
                        .HasConstraintName("FK_TercerosInformacionesFamiliares_TiposDetalles_IdTipoIdentificacion")
                        .IsRequired();

                    b.Navigation("IdTerceroNavigation");

                    b.Navigation("IdTipoDetalleParentescoNavigation");

                    b.Navigation("IdTipoDetalleProfesionNavigation");

                    b.Navigation("IdTipoIdentificacionNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroLocalizacion", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdTerceroNavigation")
                        .WithMany("TercerosLocalizaciones")
                        .HasForeignKey("IdTercero");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoLocalizacionNavigation")
                        .WithMany("TercerosLocalizaciones")
                        .HasForeignKey("IdTipoLocalizacion")
                        .HasConstraintName("FK_TercerosLocalizaciones_TiposDetalles_IdTipoLocalizacion");

                    b.Navigation("IdTerceroNavigation");

                    b.Navigation("IdTipoLocalizacionNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroPasivo", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdTerceroNavigation")
                        .WithMany("TercerosPasivos")
                        .HasForeignKey("IdTercero");

                    b.Navigation("IdTerceroNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroPasivoDetalle", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdEntidadFinancieraNavigation")
                        .WithMany("EntidadesFinancierasTerceroPasivo")
                        .HasForeignKey("IdEntidadFinanciera");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TerceroPasivo", "IdTerceroPasivoNavigation")
                        .WithMany("TercerosPasivosDetalles")
                        .HasForeignKey("IdTerceroPasivo")
                        .IsRequired();

                    b.Navigation("IdEntidadFinancieraNavigation");

                    b.Navigation("IdTerceroPasivoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroPatrimonio", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdTerceroNavigation")
                        .WithMany("TercerosPatrimonios")
                        .HasForeignKey("IdTercero");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoDetallePatrimonioNavigation")
                        .WithMany("TercerosPatrimonioIdTipoDetallePatrimonioNavigations")
                        .HasForeignKey("IdTipoDetallePatrimonio")
                        .HasConstraintName("FK_TercerosPatrimonios_TiposDetalles_IdTipoDetallePatrimonio");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoDetalleViviendaNavigation")
                        .WithMany("TercerosPatrimonioIdTipoDetalleViviendaNavigations")
                        .HasForeignKey("IdTipoDetalleVivienda")
                        .HasConstraintName("FK_TercerosPatrimonios_TiposDetalles_IdTipoDetalleVivienda");

                    b.Navigation("IdTerceroNavigation");

                    b.Navigation("IdTipoDetallePatrimonioNavigation");

                    b.Navigation("IdTipoDetalleViviendaNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroPatrimonioDetalle", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TerceroPatrimonio", "IdTerceroPatrimonioNavigation")
                        .WithMany("TercerosPatrimoniosDetalles")
                        .HasForeignKey("IdTerceroPatrimonio")
                        .HasConstraintName("FK_TercerosPatrimoniosDetalles_TercerosPatrimonios");

                    b.Navigation("IdTerceroPatrimonioNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroReferencia", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdEntidadFinancieraNavigation")
                        .WithMany("EntidadesFinancierasTerceroReferencia")
                        .HasForeignKey("IdEntidadFinanciera")
                        .HasConstraintName("FK_TercerosReferencias_EntidadesBancarias_IdEntidadFinanciera");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdTerceroNavigation")
                        .WithMany("TercerosReferencia")
                        .HasForeignKey("IdTercero");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoDetalleProductoNavigation")
                        .WithMany("TercerosReferenciaIdTipoDetalleProductoNavigations")
                        .HasForeignKey("IdTipoDetalleProducto")
                        .HasConstraintName("FK_TercerosReferencias_TiposDetalles_IdTipoDetalleProducto");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoReferenciaNavigation")
                        .WithMany("TercerosReferenciaIdTipoReferenciaNavigations")
                        .HasForeignKey("IdTipoReferencia")
                        .HasConstraintName("FK_TercerosReferencias_TiposDetalles_IdTipoReferencia");

                    b.Navigation("IdEntidadFinancieraNavigation");

                    b.Navigation("IdTerceroNavigation");

                    b.Navigation("IdTipoDetalleProductoNavigation");

                    b.Navigation("IdTipoReferenciaNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroSolicitud", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Estado", "IdEstadoSolicitudNavigation")
                        .WithMany("TercerosSolicitudes")
                        .HasForeignKey("IdEstadoSolicitud")
                        .HasConstraintName("FK_TercerosSolicitudes_Terceros_IdEstadoSolicitud")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdTerceroNavigation")
                        .WithMany("TercerosSolicitudes")
                        .HasForeignKey("IdTercero")
                        .HasConstraintName("FK_TercerosSolicitudes_Terceros_IdTercero")
                        .IsRequired();

                    b.Navigation("IdEstadoSolicitudNavigation");

                    b.Navigation("IdTerceroNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroTipoDetalle", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdTerceroNavigation")
                        .WithMany("TercerosTiposDetalles")
                        .HasForeignKey("IdTercero")
                        .HasConstraintName("FK_TercerosTiposDetalles_Terceros_IdTercero")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoDetalleNavigation")
                        .WithMany("TipoDetalleTercero")
                        .HasForeignKey("IdTipoDetalle")
                        .HasConstraintName("FK_TercerosTiposDetalles_TipoDetalle_IdTipoDetalle")
                        .IsRequired();

                    b.Navigation("IdTerceroNavigation");

                    b.Navigation("IdTipoDetalleNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoDetalle", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tipo", "IdTipoNavigation")
                        .WithMany("TiposDetalles")
                        .HasForeignKey("IdTipo")
                        .HasConstraintName("FK_TiposDetalle_Tipos")
                        .IsRequired();

                    b.Navigation("IdTipoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoFondoAyudaMutua", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoLiquidacion", "IdTipoLiquidacionNavigation")
                        .WithMany("TiposLiquidacionTipoFondoAyudaMutua")
                        .HasForeignKey("IdTipoLiquidacion")
                        .HasConstraintName("FK_TiposFAM_TipoLiquidacion_IdTipoLiquidacion")
                        .IsRequired();

                    b.Navigation("IdTipoLiquidacionNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoLiquidacion", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdTerceroNavigation")
                        .WithMany("TipoLiquidacion")
                        .HasForeignKey("IdTercero")
                        .HasConstraintName("FK_TiposLiquidaciones_Terceros_IdTercero")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoLiquidacionNavigation")
                        .WithMany("TipoLiquidacion")
                        .HasForeignKey("IdTipoLiquidacion")
                        .HasConstraintName("FK_TiposLiquidaciones_TiposDetalles_IdTipoLiquidacion")
                        .IsRequired();

                    b.Navigation("IdTerceroNavigation");

                    b.Navigation("IdTipoLiquidacionNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoPoliza", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoQuienAsumeNavigation")
                        .WithMany("TiposQuienAsume")
                        .HasForeignKey("IdTipoQuienAsume")
                        .HasConstraintName("FK_TiposPolizas_TiposDetalles_IdTipoQuienAsume");

                    b.Navigation("IdTipoQuienAsumeNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoPolizaTipoPrestamo", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoPoliza", "IdTipoPolizaNavigation")
                        .WithMany("TipoPolizasTiposPrestamos")
                        .HasForeignKey("IdTipoPoliza")
                        .HasConstraintName("FK_TiposPolizasTiposPrestamos_TiposPolizas_IdTipoPoliza")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoPrestamo", "IdTipoPrestamoNavigation")
                        .WithMany("TipoPolizasTiposPrestamos")
                        .HasForeignKey("IdTipoPrestamo")
                        .HasConstraintName("FK_TiposPolizasTiposPrestamos_TiposPrestamos_IdTipoPrestamo")
                        .IsRequired();

                    b.Navigation("IdTipoPolizaNavigation");

                    b.Navigation("IdTipoPrestamoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoPrestamo", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.EstadoAdministrativo", "IdEstadoBusNavigation")
                        .WithMany("EstadosBusTipoPrestamos")
                        .HasForeignKey("IdEstadoBus")
                        .HasConstraintName("FK_TiposPrestamos_EstadosAdministrativos_IdEstadoBus");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdFormaDescuentoNavigation")
                        .WithMany("FormasDescuentoTipoPrestamo")
                        .HasForeignKey("IdFormaDescuento")
                        .HasConstraintName("FK_TiposPrestamos_TiposDetalles_IdFormaDescuento");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoInteresNavigation")
                        .WithMany("TiposInteresTipoPrestamo")
                        .HasForeignKey("IdTipoInteres")
                        .HasConstraintName("FK_TiposPrestamos_TiposDetalles_IdTipoInteres")
                        .IsRequired();

                    b.Navigation("IdEstadoBusNavigation");

                    b.Navigation("IdFormaDescuentoNavigation");

                    b.Navigation("IdTipoInteresNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoTraspaso", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdUnidadTiempoNavigation")
                        .WithMany("TipoTraspaso")
                        .HasForeignKey("IdUnidadTiempo")
                        .HasConstraintName("FK_TiposTraspasos_TiposDetalles_IdUnidadTiempo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdUnidadTiempoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.UsuarioDocumento", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.DocumentoConcepto", "IdDocumentoConceptoNavigation")
                        .WithMany("DocumentosUsuario")
                        .HasForeignKey("IdDocumentoConcepto")
                        .HasConstraintName("FK_UsuariosDocumentos_DocumentosConceptos_IdDocumentoConcepto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdDocumentoConceptoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.UsuarioTipoDetalle", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.TipoDetalle", "IdTipoDetalleNavigation")
                        .WithMany("UsuariosTipoDetalle")
                        .HasForeignKey("IdTipoDetalle")
                        .HasConstraintName("FK_UsuariosTiposDetalles_TiposDetales_IdTipoDetalle")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdTipoDetalleNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Vehiculo", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdConsesionarioNavigation")
                        .WithMany("ConcesionariosVehiculos")
                        .HasForeignKey("IdConsesionario")
                        .HasConstraintName("fk_Vehiculos_Consesionarios_1");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdEmpresaOrigenNavigation")
                        .WithMany("EmpresaOrigenVehiculos")
                        .HasForeignKey("IdEmpresaOrigen")
                        .HasConstraintName("fk_Vehiculos_EmpresaCache")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.MarcaCarroceria", "IdMarcaCarroceriaNavigation")
                        .WithMany("Vehiculos")
                        .HasForeignKey("IdMarcaCarroceria")
                        .HasConstraintName("fk_Vehiculos_MarcasCarroceria")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.HistorialMarcaChasis", "IdMarcaChasisNavigation")
                        .WithMany()
                        .HasForeignKey("IdMarcaChasisNavigationId");

                    b.HasOne("Cw.Vanti.Integrations.Entidades.ModeloCarroceria", "IdModeloCarroceriaNavigation")
                        .WithMany("Vehiculos")
                        .HasForeignKey("IdModeloCarroceria")
                        .HasConstraintName("fk_Vehiculos_ModelosCarrocerias")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.HistorialReferenciaChasis", "IdReferenciaChasisNavigation")
                        .WithMany()
                        .HasForeignKey("IdReferenciaChasisNavigationId");

                    b.Navigation("IdConsesionarioNavigation");

                    b.Navigation("IdEmpresaOrigenNavigation");

                    b.Navigation("IdMarcaCarroceriaNavigation");

                    b.Navigation("IdMarcaChasisNavigation");

                    b.Navigation("IdModeloCarroceriaNavigation");

                    b.Navigation("IdReferenciaChasisNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.VehiculoAfiliado", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Vehiculo", "IdVehiculoNavigation")
                        .WithMany()
                        .HasForeignKey("IdVehiculoNavigationId");

                    b.Navigation("IdVehiculoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.VehiculoTercero", b =>
                {
                    b.HasOne("Cw.Vanti.Integrations.Entidades.Tercero", "IdTerceroNavigation")
                        .WithMany("VehiculosTerceros")
                        .HasForeignKey("IdTercero")
                        .HasConstraintName("fk_VehiculosTerceros_Terceros")
                        .IsRequired();

                    b.HasOne("Cw.Vanti.Integrations.Entidades.Vehiculo", "IdVehiculoNavigation")
                        .WithMany("VehiculosTerceros")
                        .HasForeignKey("IdVehiculo")
                        .HasConstraintName("fk_VehiculosTerceros_Vehiculos")
                        .IsRequired();

                    b.Navigation("IdTerceroNavigation");

                    b.Navigation("IdVehiculoNavigation");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.ActividadEconomica", b =>
                {
                    b.Navigation("TercerosDetalles");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.BeneficiarioPoliza", b =>
                {
                    b.Navigation("BeneficiariosPolizasHistorial");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Cabezote", b =>
                {
                    b.Navigation("CabezotesHistorial");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Campo", b =>
                {
                    b.Navigation("HistorialCampo");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.CentroOperacion", b =>
                {
                    b.Navigation("CentrosOperacionNivelServicios");

                    b.Navigation("HistorialCentroOperacion");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.DocumentoConcepto", b =>
                {
                    b.Navigation("DocumentoConceptoProceso");

                    b.Navigation("DocumentosUsuario");

                    b.Navigation("HistorialDocumentoConcepto");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.DocumentoConceptoProceso", b =>
                {
                    b.Navigation("HistorialDocumentoConceptoProceso");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Estado", b =>
                {
                    b.Navigation("TercerosSolicitudes");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.EstadoAdministrativo", b =>
                {
                    b.Navigation("EstadosBusMotivoCambioEstado");

                    b.Navigation("EstadosBusTipoPrestamos");

                    b.Navigation("HistorialEstadoAdministrativo");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.GestionAnticipo", b =>
                {
                    b.Navigation("HistorialGestionAnticipo");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.GestionSolicitudUsuario", b =>
                {
                    b.Navigation("HistorialGestionSolicitudUsuario");

                    b.Navigation("UsuariosAprobacionGestionAnticipo");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.InformacionSolicitud", b =>
                {
                    b.Navigation("AdjuntosSolicitudes");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.MarcaCarroceria", b =>
                {
                    b.Navigation("ModelosCarroceria");

                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.MarcaChasis", b =>
                {
                    b.Navigation("HistorialMarcaChasis");

                    b.Navigation("ReferenciaChasis");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.ModalidadServicio", b =>
                {
                    b.Navigation("HistorialModalidadServicio");

                    b.Navigation("PorcentajeCorrespondiente");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.ModeloCarroceria", b =>
                {
                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.MotivoCambioEstado", b =>
                {
                    b.Navigation("HistorialMotivoCambioEstado");

                    b.Navigation("MotivoCambioEstadoParametroProceso");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.MotivoCambioTarjetaPropiedad", b =>
                {
                    b.Navigation("HistorialMotivoCambioTarjetaPropiedad");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.MotivoDesvinculacion", b =>
                {
                    b.Navigation("HistorialMotivoDesvinculacion");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.MotivoRenovacionPoliza", b =>
                {
                    b.Navigation("HistorialMotivoRenovacionPoliza");

                    b.Navigation("MotivoRenovacionPolizaTipoPolizas");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.MotivoRenovacionPolizaTipoPoliza", b =>
                {
                    b.Navigation("HistorialMotivoRenovacionPolizaTipoPoliza");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.NivelServicio", b =>
                {
                    b.Navigation("HistorialNivelServicio");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Nomina", b =>
                {
                    b.Navigation("NominasPeriodosProcesos");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.NominaPeriodoProceso", b =>
                {
                    b.Navigation("DetallesProcesosNominas");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.NovedadCausal", b =>
                {
                    b.Navigation("Novedades");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Parametrizacion", b =>
                {
                    b.Navigation("HistorialParametrizacion");

                    b.Navigation("ParametrizacionesDetalles");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.ParametrizacionDetalle", b =>
                {
                    b.Navigation("DocumentoConceptoProceso");

                    b.Navigation("HistorialParametrizacionDetalle");

                    b.Navigation("ParametrizacionesDetallePadre");

                    b.Navigation("TiposProcesosParametroProceso");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Parametro", b =>
                {
                    b.Navigation("HistorialParametro");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.ParametroGeneralProceso", b =>
                {
                    b.Navigation("HistorialParametroGeneralProceso");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Periodo", b =>
                {
                    b.Navigation("HistorialPeriodo");

                    b.Navigation("Prestamos");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Poliza", b =>
                {
                    b.Navigation("PolizasDetalles");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.PorcentajeCorrespondiente", b =>
                {
                    b.Navigation("HistorialPorcentajeCorrespondiente");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.ProcesoNomina", b =>
                {
                    b.Navigation("NominasPeriodosProcesos");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Producto", b =>
                {
                    b.Navigation("HistorialProducto");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.ReferenciaChasis", b =>
                {
                    b.Navigation("HistorialReferenciaChasis");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Tercero", b =>
                {
                    b.Navigation("AgenciasCentroOperacion");

                    b.Navigation("AseguradorasPolizaDetalle");

                    b.Navigation("ConcesionariosVehiculos");

                    b.Navigation("Embargos");

                    b.Navigation("EmpresaOrigenVehiculos");

                    b.Navigation("EmpresasCentroOperacion");

                    b.Navigation("EmpresasNivelServicios");

                    b.Navigation("EntidadesFinancierasEmbargo");

                    b.Navigation("EntidadesFinancierasTerceroPasivo");

                    b.Navigation("EntidadesFinancierasTerceroReferencia");

                    b.Navigation("HistorialTerceros");

                    b.Navigation("InformacionSolicitudes");

                    b.Navigation("IntermediariosPolizaDetalle");

                    b.Navigation("InverseIdTerceroPadreNavigation");

                    b.Navigation("TercerosActivos");

                    b.Navigation("TercerosCabezotes");

                    b.Navigation("TercerosDetalles");

                    b.Navigation("TercerosInformacionesFamiliares");

                    b.Navigation("TercerosLocalizaciones");

                    b.Navigation("TercerosParametro");

                    b.Navigation("TercerosPasivos");

                    b.Navigation("TercerosPatrimonios");

                    b.Navigation("TercerosReferencia");

                    b.Navigation("TercerosSolicitudes");

                    b.Navigation("TercerosTiposDetalles");

                    b.Navigation("TipoLiquidacion");

                    b.Navigation("VehiculosTerceros");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroDetalle", b =>
                {
                    b.Navigation("HistorialTerceroDetalles");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroPasivo", b =>
                {
                    b.Navigation("TercerosPasivosDetalles");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroPatrimonio", b =>
                {
                    b.Navigation("TercerosPatrimoniosDetalles");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroSolicitud", b =>
                {
                    b.Navigation("HistorialTerceroSolicitud");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TerceroTipoDetalle", b =>
                {
                    b.Navigation("HistorialTerceroTipoDetalle");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Tipo", b =>
                {
                    b.Navigation("TiposDetalles");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoDesvinculacion", b =>
                {
                    b.Navigation("HistorialTipoDesvinculacion");

                    b.Navigation("MotivoDesvinculacion");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoDetalle", b =>
                {
                    b.Navigation("AseguradosPolizas");

                    b.Navigation("AseguradosPolizasConPrenda");

                    b.Navigation("BeneficiariosPolizas");

                    b.Navigation("BeneficiariosPolizasConPrenda");

                    b.Navigation("Campo");

                    b.Navigation("ClasesRenovacion");

                    b.Navigation("Fondos");

                    b.Navigation("FormasDescuentoTipoPrestamo");

                    b.Navigation("InformacionSolicitudeIdTipoDetallePagoNavigations");

                    b.Navigation("InformacionSolicitudeIdTipoDocumentoAfiliadoNavigations");

                    b.Navigation("InformacionSolicitudeIdTipoDocumentoDetallePagoNavigations");

                    b.Navigation("InformacionSolicitudeIdTipoPersonaDetallePagoNavigations");

                    b.Navigation("PorcentajeCorrespondiente");

                    b.Navigation("TerceroIdTipoIdentificacionNavigations");

                    b.Navigation("TerceroIdTipoPersonaNavigations");

                    b.Navigation("TerceroIdTipoTerceroNavigations");

                    b.Navigation("TercerosDetalleIdTipoDetalleInternacionalNavigations");

                    b.Navigation("TercerosDetalleIdTipoDetalleNivelEducativoNavigations");

                    b.Navigation("TercerosDetalleIdTipoDetalleOcupacionNavigations");

                    b.Navigation("TercerosDetalleIdTipoDetallePoderPublicoNavigations");

                    b.Navigation("TercerosDetalleIdTipoDetalleReconocimientoPublicoNavigations");

                    b.Navigation("TercerosDetalleIdTipoDetalleRecursoPublicoNavigations");

                    b.Navigation("TercerosInformacionesFamiliareIdTipoDetalleParentescoNavigations");

                    b.Navigation("TercerosInformacionesFamiliareIdTipoDetalleProfesionNavigations");

                    b.Navigation("TercerosInformacionesFamiliareIdTipoIdentificacionNavigations");

                    b.Navigation("TercerosLocalizaciones");

                    b.Navigation("TercerosPatrimonioIdTipoDetallePatrimonioNavigations");

                    b.Navigation("TercerosPatrimonioIdTipoDetalleViviendaNavigations");

                    b.Navigation("TercerosReferenciaIdTipoDetalleProductoNavigations");

                    b.Navigation("TercerosReferenciaIdTipoReferenciaNavigations");

                    b.Navigation("TipoDetalleTercero");

                    b.Navigation("TipoLiquidacion");

                    b.Navigation("TipoProcesoNavigationGestionSolicitud");

                    b.Navigation("TiposDetalleIdTipoDetalleEmbargosNavigations");

                    b.Navigation("TiposInteresTipoPrestamo");

                    b.Navigation("TiposQuienAsume");

                    b.Navigation("TipoTraspaso");

                    b.Navigation("TomadoresPolizas");

                    b.Navigation("TomadoresPolizasConPrenda");

                    b.Navigation("UsuariosTipoDetalle");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoFondoAyudaMutua", b =>
                {
                    b.Navigation("HistorialTipoFondoAyudaMutua");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoLiquidacion", b =>
                {
                    b.Navigation("HistorialTipoLiquidacion");

                    b.Navigation("Producto");

                    b.Navigation("TiposLiquidacionTipoFondoAyudaMutua");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoPoliza", b =>
                {
                    b.Navigation("HistorialTipoPoliza");

                    b.Navigation("MotivoRenovacionPolizaTipoPolizas");

                    b.Navigation("Polizas");

                    b.Navigation("TipoPolizasTiposPrestamos");

                    b.Navigation("TiposPolizasBeneficiarios");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoPolizaTipoPrestamo", b =>
                {
                    b.Navigation("HistorialTipoPolizaTipoPrestamo");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoPrestamo", b =>
                {
                    b.Navigation("HistorialTipoPrestamo");

                    b.Navigation("Prestamos");

                    b.Navigation("TipoPolizasTiposPrestamos");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoTraspaso", b =>
                {
                    b.Navigation("HistorialTipoTraspaso");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TipoVinculacion", b =>
                {
                    b.Navigation("HistorialTipoVinculacion");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.TiposEstado", b =>
                {
                    b.Navigation("TiposPrestamos");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.UsuarioDocumento", b =>
                {
                    b.Navigation("HistorialUsuarioDocumento");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.UsuarioTipoDetalle", b =>
                {
                    b.Navigation("HistorialUsuarioTipoDetalle");
                });

            modelBuilder.Entity("Cw.Vanti.Integrations.Entidades.Vehiculo", b =>
                {
                    b.Navigation("Polizas");

                    b.Navigation("VehiculosPorcentajesCorrespondientes");

                    b.Navigation("VehiculosTerceros");
                });
#pragma warning restore 612, 618
        }
    }
}
